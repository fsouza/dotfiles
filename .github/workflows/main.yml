name: Build
on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main
jobs:
  bootstrap:
    name: bootstrap
    runs-on: macos-11
    steps:
      - name: install neovim
        run: |
          curl -L https://github.com/neovim/neovim/releases/download/v0.5.0/nvim-macos.tar.gz | sudo tar -C /usr/local --strip 1 -xzf -

      - name: install build deps
        run: |
          brew install bash libyaml

      - uses: actions/checkout@v2.4.0

      - uses: avsm/setup-ocaml@v2
        with:
          ocaml-compiler: "4.12.0"
          dune-cache: true

      - uses: actions/setup-python@v2.3.0
        with:
          python-version: "3.10"

      - uses: actions/setup-go@v2.1.4
        with:
          go-version: "1.x"

      - uses: actions/setup-dotnet@v1.8.2
        with:
          dotnet-version: "5.x"

      - name: langservers cache
        id: nvim-langservers-cache
        uses: actions/cache@v2.1.6
        with:
          path: ~/.cache/nvim/langservers
          key: "${{ runner.os }}-${{ hashFiles('nvim/scripts/bootstrap.py') }}"

      - name: get luajit version
        id: get-luajit-version
        run: |
          echo "::set-output name=version::$(nvim --version | grep LuaJIT)"

      - name: set MACOSX_DEPLOYMENT_TARGET
        id: macosx-deployment-target
        run: |
          echo "MACOSX_DEPLOYMENT_TARGET=$(sw_vers -productVersion)" >>${GITHUB_ENV}
          echo "::set-output name=product-version::$(sw_vers -productVersion)"

      - name: hererocks cache
        id: nvim-hererocks-cache
        uses: actions/cache@v2.1.6
        with:
          path: ~/.cache/nvim/hr
          key: "${{ runner.os }}-${{ steps.get-luajit-version.outputs.version }}-${{ steps.macosx-deployment-target.outputs.product-version }}-${{ hashFiles('nvim/vimfiles-dev-1.rockspec') }}"

      - name: get python version
        id: get-python-version
        run: |
          echo "::set-output name=version::$(python3 --version)"

      - name: virtualenv cache
        id: nvim-virtualenv-cache
        uses: actions/cache@v2.1.6
        with:
          path: ~/.cache/nvim/venv
          key: "${{ runner.os }}-${{ hashFiles('nvim/langservers/requirements.txt') }}-${{ steps.get-python-version.outputs.version }}"

      - name: install fnm
        run: |
          curl -fsSL https://fnm.vercel.app/install | bash
          echo "${HOME}/.fnm" >> "${GITHUB_PATH}"

      - name: run setup
        run: |
          eval $(opam env --set-switch)
          ./bin/setup

  pre-commit:
    name: pre-commit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0

      - uses: actions/setup-python@v2.3.0
        with:
          python-version: 3.x

      - name: install pre-commit
        run: pip install pre-commit

      - name: pre-commit cache
        uses: actions/cache@v2.1.6
        with:
          path: ~/.cache/pre-commit
          key: "${{ hashFiles('.pre-commit-config.yaml') }}"

      - run: pre-commit run --all-files --show-diff-on-failure
