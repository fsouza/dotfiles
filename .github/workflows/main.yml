name: Build
on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main
jobs:
  bootstrap:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
          - macos-latest
        ocaml-version:
          - 4.12.0

    name: bootstrap-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: install neovim nightly
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-20.04" ]; then
            suffix=linux64
          else
            suffix=macos
          fi
          curl -L https://github.com/neovim/neovim/releases/download/nightly/nvim-${suffix}.tar.gz | sudo tar -C /usr/local --strip 1 -xzf -

      - name: install build deps on mac
        if: matrix.os == 'macos-latest'
        run: |
          brew install bash shellcheck libyaml

      - name: install build deps on ubuntu
        if: matrix.os == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck libyaml-dev

      - uses: actions/checkout@v2.3.4
        with:
          submodules: 'recursive'

      - run: make shellcheck

      - name: opam cache
        id: opam-cache
        uses: actions/cache@v2.1.5
        with:
          path: ~/.opam
          key: "${{ matrix.os }}-${{ matrix.ocaml-version }}"

      - uses: avsm/setup-ocaml@v1.1.11
        with:
          ocaml-version: ${{ matrix.ocaml-version }}

      - uses: actions/setup-node@v2.1.5
        with:
          node-version: "14.x"

      - uses: actions/setup-python@v2.2.2
        with:
          python-version: "3.x"

      - uses: actions/setup-go@v2.1.3
        with:
          go-version: "1.x"

      - name: langservers cache
        id: nvim-langservers-cache
        uses: actions/cache@v2.1.5
        with:
          path: ~/.cache/nvim/langservers
          key: "${{ matrix.os }}-${{ hashFiles('nvim/langservers/setup.sh') }}"

      - name: hererocks cache
        id: nvim-hererocks-cache
        uses: actions/cache@v2.1.5
        with:
          path: ~/.cache/nvim/hr
          key: "${{ matrix.os }}-${{ hashFiles('nvim/scripts/bootstrap.lua') }}-${{ hashFiles('nvim/vimfiles-dev-1.rockspec') }}"

      - name: get python version
        id: get-python-version
        run: |
          echo "::set-output name=version::$(python3 --version)"

      - name: virtualenv cache
        id: nvim-virtualenv-cache
        uses: actions/cache@v2.1.5
        with:
          path: ~/.cache/nvim/venv
          key: "${{ matrix.os }}-${{ hashFiles('nvim/langservers/requirements.txt') }}-${{ steps.get-python-version.outputs.version }}"

      - name: run setup
        run: ./bin/setup

      - name: run luacheck
        run: make -f $HOME/.config/nvim/Makefile luacheck
