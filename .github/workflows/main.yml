name: Build
on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main
jobs:
  bootstrap:
    name: bootstrap
    runs-on: macos-11
    steps:
      - name: install neovim
        run: |
          curl -L https://github.com/neovim/neovim/releases/download/nightly/nvim-macos.tar.gz | sudo tar -C /usr/local --strip 1 -xzf -

      - uses: actions/checkout@v3.1.0

      - uses: actions/setup-python@v4.3.0
        id: setup-python
        with:
          python-version: "3.11"

      - uses: actions/setup-go@v3.3.1
        with:
          go-version: "1.x"

      - uses: fsouza/rs-toolchain@v1.1.0
        with:
          toolchain: stable
          default: true
          components: clippy, rustfmt, rust-src

      - name: langservers cache
        id: nvim-langservers-cache
        uses: actions/cache@v3.0.11
        with:
          path: ~/.cache/nvim/langservers
          key: "${{ runner.os }}-${{ hashFiles('nvim/scripts/bootstrap.py') }}-${{ steps.setup-python.outputs.python-version }}"

      - name: get luajit version
        id: get-luajit-version
        run: |
          echo "version=$(nvim --version | grep LuaJIT)" >>${GITHUB_OUTPUT}

      - name: set MACOSX_DEPLOYMENT_TARGET
        id: macosx-deployment-target
        run: |
          echo "MACOSX_DEPLOYMENT_TARGET=$(sw_vers -productVersion)" >>${GITHUB_ENV}
          echo "product-version=$(sw_vers -productVersion)" >>${GITHUB_OUTPUT}

      - name: hererocks cache
        id: nvim-hererocks-cache
        uses: actions/cache@v3.0.11
        with:
          path: ~/.cache/nvim/hr
          key: "${{ runner.os }}-${{ steps.get-luajit-version.outputs.version }}-${{ steps.macosx-deployment-target.outputs.product-version }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('nvim/vimfiles-dev-1.rockspec') }}"

      - name: virtualenv cache
        id: nvim-virtualenv-cache
        uses: actions/cache@v3.0.11
        with:
          path: ~/.cache/nvim/venv
          key: "${{ runner.os }}-${{ hashFiles('nvim/langservers/requirements.txt') }}-${{ steps.setup-python.outputs.python-version }}"

      - name: run setup
        run: |
          ./bootstrap/setup

      - name: nvim lint & tests
        run: |
          env FSOUZA_DOTFILES_DIR=${PWD} make nvim-tests nvim-lint
        env:
          NVIM_SKIP_TREESITTER: true
          NVIM_TEST_TIMEOUT: 10000

  pre-commit:
    name: pre-commit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0

      - uses: actions/setup-python@v4.3.0
        with:
          python-version: 3.x
          cache: pip

      - name: install pre-commit
        run: pip install pre-commit

      - name: pre-commit cache
        uses: actions/cache@v3.0.11
        with:
          path: ~/.cache/pre-commit
          key: "${{ hashFiles('.pre-commit-config.yaml') }}"

      - run: pre-commit run --all-files --show-diff-on-failure
