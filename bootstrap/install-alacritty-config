#!/usr/bin/env python3.11
import argparse
import subprocess
import sys
from collections.abc import Sequence
from pathlib import Path


def main(args: Sequence[str]) -> int:
    colorschemes = {
        "default": DEFAULT_COLORS,
    }
    parser = argparse.ArgumentParser("install-alacritty-config")
    parser.add_argument("-c", "--colors", default="default", dest="colorscheme")
    parser.add_argument(
        "-s",
        "--font-size",
        default=12.0,
        dest="font_size",
        type=float,
    )
    opts = parser.parse_args(args)

    config = CONFIG.format(
        colorscheme=colorschemes[opts.colorscheme],
        shell=f"{subprocess.check_output('brew --prefix zsh', shell=True, encoding='utf-8').strip()}/bin/zsh",
        dotfiles_dir=Path(__file__).parent.parent.absolute(),
        font_size=opts.font_size,
    )

    config_file = Path.home() / ".config" / "alacritty.yml"
    config_file.parent.mkdir(parents=True, exist_ok=True)

    if config_file.is_symlink():
        config_file.unlink()

    config_file.write_text(config)

    return 0


# note: this doesn't use dictionaries and YAML marshaling because YAML
# marshaling isn't available in the Python standard library and this is a
# bootstrapping script.
DEFAULT_COLORS = """
  primary:
    background: "#ececec"
    foreground: "#000000"

  normal:
    black: "#000000"
    red: "#c91b00"
    green: "#00c200"
    yellow: "#606000"
    blue: "#0225c7"
    magenta: "#c930c6"
    cyan: "#00c5c7"
    white: "#c7c7c7"

  bright:
    black: "#000000"
    red: "#f2201f"
    green: "#23aa00"
    yellow: "#efef00"
    blue: "#1a8fff"
    magenta: "#fd28ff"
    cyan: "#00c5c7"
    white: "#c7c7c7"
"""

CONFIG = r"""
window:
  padding:
    x: 2
    y: 2

  dynamic_padding: true
  option_as_alt: OnlyLeft

scrolling:
  history: 50000
  multiplier: 3

font:
  normal:
    family: SauceCodePro Nerd Font Mono
    style: Regular

  bold:
    style: Semibold

  size: {font_size:.1f}

colors:
{colorscheme}

env:
  FSOUZA_DOTFILES_DIR: {dotfiles_dir}
  ZDOTDIR: {dotfiles_dir}/zsh

mouse:
  double_click:
    threshold: 100
  triple_click:
    threshold: 100

cursor:
  style:
    shape: Block
    blinking: Never
  unfocused_hollow: true

shell:
  program: {shell}
  args:
    - --login
"""


if __name__ == "__main__":
    sys.exit(main(sys.argv[1:]))
