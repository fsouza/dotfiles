NEOVIM_INSTALL_PREFIX=$HOME/opt/neovim
NEOVIM_SRC_DIR=$HOME/Projects/os/3/neovim

function _ensure_neovim_src {
	if ! [ -d "${NEOVIM_SRC_DIR}" ]; then
		git clone https://github.com/neovim/neovim.git "${NEOVIM_SRC_DIR}"
	fi
}

function _update_neovim {
	_ensure_neovim_src
	pushd "${NEOVIM_SRC_DIR}" &&
		git pull &&
		make \
			CMAKE_BUILD_TYPE=RelWithDebInfo \
			CMAKE_INSTALL_PREFIX="${NEOVIM_INSTALL_PREFIX}" \
			CMAKE_EXTRA_FLAGS="-DCMAKE_FIND_FRAMEWORK=LAST" \
			BUNDLED_CMAKE_FLAG="-DUSE_BUNDLED_GPERF=OFF" &&
		make install &&
		popd || return
}

function rebootstrap_neovim {
	_ensure_neovim_src
	pushd "${NEOVIM_SRC_DIR}" &&
		make distclean &&
		git clean -dfx &&
		rm -rf "${NEOVIM_INSTALL_PREFIX}" &&
		_update_neovim
}

function update_neovim {
	_update_neovim || rebootstrap_neovim
}

# packer isn't very scriptable, so let's workaround it. This isn't great, but
# works for now.
function _nvim_packer_pull {
	for folder in opt start; do
		for dep in ~/.local/share/nvim/site/pack/packer/${folder}/*; do
			git -C "${dep}" pull
		done
	done
}

function bump_vimfiles {
	(
		cd "${HOME}"/.config/nvim &&
			git pull &&
			env NVIM_DEBUG=1 make bootstrap &&
			_nvim_packer_pull
	)
}

if [ -x "$NEOVIM_INSTALL_PREFIX/bin/nvim" ]; then
	prepend_to_path "$NEOVIM_INSTALL_PREFIX/bin"

	function zvim {
		nvim +'autocmd User PluginReady ++once FzfFiles'
	}

	export EDITOR=nvim
fi
