NEOVIM_INSTALL_PREFIX=$HOME/opt/neovim
NEOVIM_SRC_DIR=$HOME/Projects/os/3/neovim

function _ensure_neovim_src {
	if ! [ -d "${NEOVIM_SRC_DIR}" ]; then
		git clone https://github.com/neovim/neovim.git "${NEOVIM_SRC_DIR}"
	fi
}

function _update_neovim {
	_ensure_neovim_src
	pushd "${NEOVIM_SRC_DIR}" &&
		git pull &&
		make \
			CMAKE_BUILD_TYPE=RelWithDebInfo \
			CMAKE_INSTALL_PREFIX="${NEOVIM_INSTALL_PREFIX}" \
			CMAKE_EXTRA_FLAGS="-DCMAKE_FIND_FRAMEWORK=LAST" \
			BUNDLED_CMAKE_FLAG="-DUSE_BUNDLED_GPERF=OFF" &&
		make install &&
		popd || return
}

function rebootstrap_neovim {
	_ensure_neovim_src
	pushd "${NEOVIM_SRC_DIR}" &&
		make distclean &&
		git clean -dfx &&
		rm -rf "${NEOVIM_INSTALL_PREFIX}" &&
		_update_neovim &&
		popd
}

function update_neovim {
	_update_neovim || rebootstrap_neovim
}

if [ -x "$NEOVIM_INSTALL_PREFIX/bin/nvim" ]; then
	prepend_to_path "$NEOVIM_INSTALL_PREFIX/bin"

	function zvim {
		nvim +'autocmd User PluginReady ++once lua require("fsouza.plugin.fuzzy")["find-files"]()' "$@"
	}

	export EDITOR=nvim GIT_EDITOR=nvim MANPAGER="nvim +'Man!'"
fi
