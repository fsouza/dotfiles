function vg {
	rg --no-heading -N "$@"
}

function cg {
	vg -g '!vendor/' "$@"
}

function g {
	cg --color never "$@"
}

function ig {
	g -i "$@"
}

function gimme {
	if [ -z "$1" ]; then
		echo "Please provide the go version"
		return 1
	fi
	GIMME=$(which gimme)
	if [[ $1 =~ ^- || $1 == "help" ]]; then
		${GIMME} "${1}"
	else
		if [ "$1" = "tip" ]; then
			old_gimme_type=$GIMME_TYPE
			export GIMME_TYPE=git
		fi
		eval "$(${GIMME} ${1})"
		if [ -n "$old_gimme_type" ]; then
			export GIMME_TYPE=$old_gimme_type
			unset old_gimme_type
		fi
	fi
}

function update_go_tip {
	gimme=$(which gimme)
	GIMME_DEBUG=2 GIMME_TYPE=git $gimme tip
	gopath="$(go env GOPATH)"

	if [ -n "$gopath" ]; then
		rm -rf $gopath/pkg/$(go env GOOS)_$(go env GOARCH)
	fi
	go clean -cache
}

function git_config {
	email=${1:-${GITEMAIL}}
	if [ -z "$email" ]; then
		echo "Please provide the email"
		return 1
	fi
	name=${2:-${GITNAME}}
	if [ -z "$name" ]; then
		echo "Please define the GITNAME environment variable or provide a second parameter to this command"
		return 1
	fi
	git config user.name "$name"
	git config user.email $email
	git config user.signingkey $email
}
