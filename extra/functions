function g {
	grep "$@" -Ir . --exclude-dir .git --exclude-dir .hg --exclude-dir .svn --exclude-dir Godeps --exclude-dir _build
}

function cg {
	g --color "$@"
}

function vim() {
	v vim
	which_vim=$(which nvim)
	if [ -z "$which_vim" ]; then
		which_vim=$(which vim)
	fi
	$which_vim "$@"
}

function xvim() {
	vim $(find . -name "$1")
}

function build_binary {
	GOOS=$3 GOARCH=$4 go build
	target=$1
	if [[ $3 == "windows" ]]; then
		target="${1}.exe"
	fi
	tar -czvf ${1}-${2}-${3}_${4}.tar.gz $target
	rm $target
}

function build_binaries {
	build_binary $1 $2 darwin amd64
	build_binary $1 $2 linux amd64
	build_binary $1 $2 linux 386
	build_binary $1 $2 windows amd64
	build_binary $1 $2 windows 386
}

function docker_node_ssh {
	filter=$1
	tsuru-admin docker-node-list -f $filter | grep "^| http://" | awk '{print $2}' | egrep -o "[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+" | xargs cssh
}

function gimme {
	if [ -z "$1" ]; then
		echo "Please provide the go version"
		return 1
	fi
	GIMME=$(which gimme)
	if [[ $1 =~ ^- ]]; then
		${GIMME} "${1}"
	else
		if [ "$1" = "tip" ] && [ -n "$GIMME_TYPE" ]; then
			old_gimme_type=$GIMME_TYPE
			unset GIMME_TYPE
		fi
		eval "$(${GIMME} ${1})"
		if [ -n "$old_gimme_type" ]; then
			export GIMME_TYPE=$old_gimme_type
			unset old_gimme_type
		fi
	fi
}
