function gimme {
	if [ -z "$1" ]; then
		echo >&2 "Please provide the go version"
		return 1
	fi
	GIMME=$(which gimme)
	if [[ $1 =~ ^- || $1 == "help" ]]; then
		${GIMME} "${1}"
	else
		if [[ $1 == "tip" ]]; then
			old_gimme_type=$GIMME_TYPE
			export GIMME_TYPE=git
		fi
		eval "$(${GIMME} ${1})"
		if [ -n "$old_gimme_type" ]; then
			export GIMME_TYPE=$old_gimme_type
			unset old_gimme_type
		fi
	fi
}

function refresh_go_tools {
	GO111MODULE=off go get -u github.com/Masterminds/glide
	(
		cd /tmp
		export GO111MODULE=on
		go get golang.org/x/tools/gopls@master
		go get honnef.co/go/tools/cmd/staticcheck@master
		go get mvdan.cc/gofumpt/gofumports@master
		go get mvdan.cc/gofumpt@master
	)
}

function update_go_tip {
	gimme=$(which gimme)
	GIMME_DEBUG=2 GIMME_TYPE=git $gimme tip
	gopath="$(go env GOPATH)"

	if [ -n "$gopath" ]; then
		rm -rf "${gopath}/pkg/$(go env GOOS)_$(go env GOARCH)"
	fi
	go clean -cache
	refresh_go_tools
}

function set_private_goproxy {
	# assumes that the private GOPROXY is an athens server, so /healthz
	# should work.
	proxy_host=${1}
	if curl -fm 0.1 https://${proxy_host}/healthz &>/dev/null; then
		export GOPROXY=https://$proxy_host,$GOPROXY
	fi
}
