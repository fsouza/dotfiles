function gimme {
	if [ -z "$1" ]; then
		echo >&2 "Please provide the go version"
		return 1
	fi
	if [[ $1 =~ ^- || $1 == "help" ]]; then
		command gimme "${1}"
	else
		if [[ $1 == "tip" ]]; then
			old_gimme_type=$GIMME_TYPE
			export GIMME_TYPE=git
		fi
		eval "$(command gimme ${1})"
		if [ -n "$old_gimme_type" ]; then
			export GIMME_TYPE=$old_gimme_type
			unset old_gimme_type
		fi
	fi
}

function refresh_go_tools {
	GO111MODULE=off go get -u github.com/Masterminds/glide
	(
		cd /tmp
		export GO111MODULE=on
		go get golang.org/x/tools/cmd/goimports@master
		go get golang.org/x/tools/gopls@master golang.org/x/tools@master
		go get github.com/golangci/golangci-lint/cmd/golangci-lint@master
		go get honnef.co/go/tools/cmd/staticcheck@master
	)
}

function update_go_tip {
	GIMME_DEBUG=2 GIMME_TYPE=git command gimme tip
	go clean -cache
	source "${HOME}/.gimme/envs/gotip.env"
	refresh_go_tools
}

function set_private_goproxy {
	# assumes that the private GOPROXY is an athens server, so /healthz
	# should work.
	proxy_host=${1}
	timeout=${2:-0.1}
	if curl -fm ${timeout} https://${proxy_host}/healthz &>/dev/null; then
		export GOPROXY=https://$proxy_host,$(go env GOPROXY)
	fi
}
