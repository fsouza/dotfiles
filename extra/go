GO_HOME=$(${FSOUZA_DOTFILES_DIR}/bin/__bootstrap_go print-home)

function _normalize_name_version {
	local name_or_version=${1}
	if grep -q '^go' <<<${name_or_version}; then
		echo ${name_or_version}
	else
		echo go${name_or_version}
	fi
}

function refresh_go_tools {
	env GOPROXY=https://proxy.golang.org go install honnef.co/go/tools/cmd/staticcheck@latest
}

function _install_go {
	(
		local name=$(_normalize_name_version ${1})
		local temp_gobin=$(mktemp -d)
		prepend_to_path "$(dirname $(${FSOUZA_DOTFILES_DIR}/bin/__bootstrap_go))"
		export GOPROXY=https://proxy.golang.org

		# hack for gotip
		if [[ ${name} == "gotip" ]]; then
			env GOPATH=${GO_HOME}/sdk/gotip/pkg/obj/gopath go clean -modcache
		fi

		env GOBIN=${temp_gobin} GOPATH=${GO_HOME}/selfpath go install golang.org/dl/${name}@latest &&
			env HOME=${GO_HOME} GOROOT_BOOTSTRAP=$(go env GOROOT) ${temp_gobin}/${name} download &&
			rm -rf ${temp_gobin}
	)
}

function use_go {
	local name=$(_normalize_name_version ${1:-gotip})

	local dir=${GO_HOME}/sdk/${name}/bin
	if ! [ -d ${dir} ]; then
		_install_go ${name}
	fi

	export GOBIN=${HOME}/bin GOPATH=${GO_HOME}/path GOPRIVATE=git.sr.ht
	prepend_to_path ${dir} ${GOBIN}
}

function update_go_tip {
	_install_go gotip && use_go tip && refresh_go_tools
}

use_go tip
