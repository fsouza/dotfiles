function install_rclone {
	local arch=$(uname -m)
	if [[ $arch == "x86_64" ]]; then
		arch=amd64
	fi

	# note: no Linux support :)
	local download_url=https://beta.rclone.org/rclone-beta-latest-osx-${arch}.zip
	local dst=$(mktemp -d)

	curl -sLo "${dst}/rclone.zip" "${download_url}"
	pushd "${dst}"
	unzip -j rclone.zip
	mkdir -p ~/.local/bin ~/.local/share/man
	mv rclone ~/.local/bin/rclone
	mv rclone.1 ~/.local/share/man
	popd

	rm -rf "${dst}"
}

function rclone_mount {
	if [ -z "$1" ]; then
		echo >&2 please specify the remote
		return 2
	fi

	if [ -z "$2" ]; then
		echo >&2 please specify the path
		return 2
	fi

	rclone mount "${1}" "${2}" \
		--daemon \
		--dir-cache-time 60s \
		--dir-perms 0755 \
		--file-perms 0644 \
		--poll-interval 20s \
		--vfs-cache-mode full \
		--write-back-cache
}

function ensure_rclone_mount {
	local remote=$1
	local local_path=$2

	if ! command -v rclone &>/dev/null; then
		install_rclone
	fi

	if ! rclone lsd "${remote}" &>/dev/null; then
		echo >&2 "remote ${remote} not defined in rclone"
		return 2
	fi

	mkdir -p "${local_path}"
	if ! (mount | grep -q ^"${remote} on ${local_path} "); then
		rclone_mount "${remote}" "${local_path}"
	fi
}

ensure_rclone_mount gd: "${HOME}"/gd &
