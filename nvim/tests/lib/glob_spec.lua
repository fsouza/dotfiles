local glob = require("fsouza.lib.glob")

describe("compile and match", function()
  it("should support compiling a valid glob and matching it later", function()
    local ok, matcher = glob.compile("**/*.go")
    assert.is_true(ok)
    assert.is_true(glob.match(matcher, "dir/subdir/file.go"))
    assert.is_not_true(glob.match(matcher, "dir/subdir/file.goo"))
    assert.is_not_true(glob.match(matcher, "dir/subdir/file.py"))
  end)

  it("should support literal globs", function()
    local ok, matcher = glob.compile("dir/subdir/file.py")
    assert.is_true(ok)
    assert.is_true(glob.match(matcher, "dir/subdir/file.py"))
    assert.is_not_true(glob.match(matcher, "dir/subdir/file.pyy"))
    assert.is_not_true(glob.match(matcher, "dir/subdir/file.go"))
  end)

  it("should support groups", function()
    local ok, matcher = glob.compile("**/*.{go,mod,work,sum}")
    assert.is_true(ok)
    assert.is_true(glob.match(matcher, "dir/subdir/nested/file.go"))
    assert.is_true(glob.match(matcher, "go.mod"))
    assert.is_true(glob.match(matcher, "go.work"))
    assert.is_true(glob.match(matcher, "go.sum"))
    assert.is_not_true(glob.match(matcher, "file.py"))
  end)

  it("should support ranges", function()
    local ok, matcher = glob.compile("f[aeiou]le.py")
    assert.is_true(ok)
    assert.is_true(glob.match(matcher, "file.py"))
    assert.is_true(glob.match(matcher, "fele.py"))
    assert.is_true(glob.match(matcher, "file.py"))
    assert.is_true(glob.match(matcher, "fole.py"))
    assert.is_true(glob.match(matcher, "fule.py"))
    assert.is_not_true(glob.match(matcher, "fzle.py"))

    local ok, matcher = glob.compile("f[a-z]le.py")
    assert.is_true(ok)
    assert.is_true(glob.match(matcher, "file.py"))
    assert.is_true(glob.match(matcher, "fble.py"))
    assert.is_true(glob.match(matcher, "fcle.py"))
    assert.is_not_true(glob.match(matcher, "f3le.py"))
    assert.is_not_true(glob.match(matcher, "fAle.py"))
  end)

  it("should support question mark", function()
    local ok, matcher = glob.compile("f?le.py")
    assert.is_true(ok)
    assert.is_true(glob.match(matcher, "file.py"))
    assert.is_true(glob.match(matcher, "fele.py"))
    assert.is_true(glob.match(matcher, "file.py"))
    assert.is_true(glob.match(matcher, "fole.py"))
    assert.is_true(glob.match(matcher, "fule.py"))
    assert.is_true(glob.match(matcher, "fzle.py"))
    assert.is_not_true(glob.match(matcher, "fzle.pyy"))
  end)
end)
